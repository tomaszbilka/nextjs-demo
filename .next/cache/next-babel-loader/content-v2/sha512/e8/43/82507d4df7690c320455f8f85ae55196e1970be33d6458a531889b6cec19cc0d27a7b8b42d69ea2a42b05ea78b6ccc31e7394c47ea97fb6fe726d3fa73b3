{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tomas\\\\Desktop\\\\REACT\\\\24-nextjs-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://images.unsplash.com/photo-1514924013411-cbf25faa35bb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=390&q=80\",\n    title: \"A First meetup\",\n    address: \"city and street here\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:admin@nextjs.lkgt2.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('mymeetups'); //metoda find(), pierwszy argument to które dokumenty ma znależć, puste to wszystko, drugi to które pola z tych dokumentów\n\n  const meetup = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetup.map(el => ({\n      params: {\n        meetupId: el._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      image: 'https://images.unsplash.com/photo-1514924013411-cbf25faa35bb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=390&q=80',\n      id: meetupId,\n      title: 'A First meetup',\n      address: 'city and street here',\n      description: 'This is a first meetup'\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/tomas/Desktop/REACT/24-nextjs-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","meetup","find","_id","toArray","close","fallback","paths","map","el","params","meetupId","toString","getStaticProps","context","console","log","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,+JADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,sBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,wFADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,WAAd,CAA1B,CAPqC,CASrC;;AACA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAYC,EAAD,KAAS;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,EAAE,CAACN,GAAH,CAAOS,QAAP;AAAZ;AAAV,KAAT,CAAX;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLuB,MAAAA,KAAK,EACH,+JAFG;AAGLC,MAAAA,EAAE,EAAEP,QAHC;AAILQ,MAAAA,KAAK,EAAE,gBAJF;AAKLC,MAAAA,OAAO,EAAE,sBALJ;AAMLC,MAAAA,WAAW,EAAE;AANR;AADF,GAAP;AAUD;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image='https://images.unsplash.com/photo-1514924013411-cbf25faa35bb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=390&q=80'\r\n      title='A First meetup'\r\n      address='city and street here'\r\n      description='This is a first meetup'\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://admin:admin@nextjs.lkgt2.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('mymeetups');\r\n\r\n  //metoda find(), pierwszy argument to które dokumenty ma znależć, puste to wszystko, drugi to które pola z tych dokumentów\r\n  const meetup = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetup.map((el) => ({ params: { meetupId: el._id.toString() } })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      image:\r\n        'https://images.unsplash.com/photo-1514924013411-cbf25faa35bb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=390&q=80',\r\n      id: meetupId,\r\n      title: 'A First meetup',\r\n      address: 'city and street here',\r\n      description: 'This is a first meetup',\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}